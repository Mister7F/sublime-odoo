%YAML 1.2
---
# Odoo OWL template with javascript as expression
name: XML - Odoo - OWL
scope: text.xml.owl
version: 2

extends: Packages/XML/XML.sublime-syntax

file_extensions:
  - xml

variables:
  owl_attribute_charset: '[A-Za-z0-9._-]'

contexts:
  tag:
    - meta_prepend: true
    - include: owl-component-tag

  tag-attribute:
    - meta_prepend: true
    - include: owl-directive

  owl-directive:
    - match: (?i:(t-name))
      scope: entity.other.attribute-name
      push: owl-symbols-assignment
    # `t-att` attribute
    - match: (?i:(t-name|t-set-slot|t-slot-scope|t-call|t-inherit({{owl_attribute_charset}}*))|t-ref)
      scope: entity.other.attribute-name
      push: tag-else-pop
    - match: (?i:(t-attf-{{owl_attribute_charset}}+)|(t-valuef))
      scope: entity.other.attribute-name
      push: owl-attf-assignment
    - match: (?i:t-{{owl_attribute_charset}}+)
      scope: entity.other.attribute-name
      push: owl-directive-assignment

  # -----------------------------------------------------------------------
  # `t-att-`
  # -----------------------------------------------------------------------

  owl-directive-assignment:
    - meta_content_scope: meta.directive.owl
    - match: =
      scope: meta.directive.owl punctuation.separator.key-value.owl
      set: owl-directive-value
    - include: tag-else-pop

  owl-directive-value:
      - match: \"
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: scope:source.js # not using `#expression` for `and` operator
        embed_scope: source.js
        escape: \"
        escape_captures:
          0: punctuation.definition.string.end.owl
      - match: \'
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: scope:source.js # not using `#expression` for `and` operator
        embed_scope: source.js
        escape: \'
        escape_captures:
          0: punctuation.definition.string.end.owl
      - include: tag-else-pop

  # -----------------------------------------------------------------------
  # `t-attf-`
  # -----------------------------------------------------------------------

  owl-attf-assignment:
    - meta_content_scope: meta.directive.owl
    - match: =
      scope: meta.directive.owl punctuation.separator.key-value.owl
      set: owl-attf-attribute
    - include: tag-else-pop

  owl-attf-attribute:
      - match: \"
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: owl-attf-string
        embed_scope: meta.string.owl
        escape: \"
        escape_captures:
          0: punctuation.definition.string.end.owl
      - match: \'
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: owl-attf-string
        embed_scope: meta.string.owl
        escape: \'
        escape_captures:
          0: punctuation.definition.string.end.owl
      - include: tag-else-pop

  owl-attf-string:
    - meta_scope: string.quoted.double.owl-attf
    - match: \{\{
      captures:
        0: punctuation.section.interpolation.begin.owl
      embed: scope:source.js # not using `#expression` for `and` operator
      embed_scope: source.js
      escape: \}\}
      escape_captures:
        0: punctuation.section.interpolation.end.owl
    - meta_scope: string.quoted.double.owl-attf
    - match: '#\{'
      captures:
        0: punctuation.section.interpolation.begin.owl
      embed: scope:source.js # not using `#expression` for `and` operator
      embed_scope: source.js
      escape: \}
      escape_captures:
        0: punctuation.section.interpolation.end.owl

  # -----------------------------------------------------------------------
  # OWL components (camel case tag)
  # -----------------------------------------------------------------------

  owl-component-tag:
    - match: (<)([A-Z][A-Za-z0-9_]+)
      captures:
        1: punctuation.definition.tag.begin.opening.xml
        2: entity.name.tag.localname.xml
      push: owl-component-tag-content

  owl-component-tag-content:  # attributes of OWL component (everything is JS)
    - meta_scope: meta.tag.xml
    - match: />
      scope: punctuation.definition.tag.end.self-closing.xml
      pop: 1
    - match: '>'
      scope: punctuation.definition.tag.end.opening.xml
      pop: 1
    - match: \?>
      scope: invalid.illegal.bad-tag-end.xml
      pop: 1
    - include: owl-directive
    - include: owl-component-directive
    - include: tag-end-missing-pop
    - include: tag-attribute

  owl-component-directive:
    - match: (?i:({{owl_attribute_charset}}+.translate)|size)
      scope: entity.other.attribute-name
      push: string-quoted-pop
    - match: (?i:{{owl_attribute_charset}}+)
      scope: entity.other.attribute-name
      push: owl-directive-assignment

  # -----------------------------------------------------------------------
  # Attribute that should be added in symbols list
  # -----------------------------------------------------------------------

  owl-symbols-assignment:
    - meta_content_scope: meta.directive.owl
    - match: =
      scope: meta.directive.owl punctuation.separator.key-value.owl
      set: owl-symbols-attribute
    - include: tag-else-pop

  owl-symbols-attribute:
      - match: \"
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: owl-attribute-string
        embed_scope: meta.string.owl owl.symbols
        escape: \"
        escape_captures:
          0: punctuation.definition.string.end.owl
      - match: \'
        captures:
          0: punctuation.definition.string.begin.owl
        pop: 1
        embed: owl-attribute-string
        embed_scope: meta.string.owl owl.symbols
        escape: \'
        escape_captures:
          0: punctuation.definition.string.end.owl
      - include: tag-else-pop

  owl-attribute-string:
    - meta_scope: string.quoted.double.owl
